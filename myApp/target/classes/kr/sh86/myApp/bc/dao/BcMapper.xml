<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BcDao">

<!-- 산업코드 분류 시작 -->

<!-- 산업코드 세세분류 조회 -->
<select id="selectInduCodeAll" resultType="kr.sh86.myApp.bc.domain.InduCode">
	SELECT *
	FROM BC.TB_INDUCODE
</select>

<!-- 타겟에서 일치하는 행 조회 -->
<select id="selectInduCodeAtInduCode" parameterType="String" resultType="kr.sh86.myApp.bc.domain.Target">
	SELECT *
	FROM BC.TB_TARGET
	WHERE column9 like #{indBBSmallGroup}||'%'
</select>

<!-- 타겟에 산업코드 대분류부터 입력 -->
<update id="updateTargetInduCode" parameterType="kr.sh86.myApp.bc.domain.Target">
	UPDATE BC.TB_TARGET
	SET COLUMN5 = #{column5},
		COLUMN6 = #{column6},
		COLUMN7 = #{column7},
		COLUMN8 = #{column8},
		COLUMN11 = #{column11},
		COLUMN12 = #{column12}
	WHERE COLUMN1 = #{column1}
</update>


<!-- 산업코드 분류 끝 -->


<!-- 전체 명함 조회 -->
<select id="selectBcAll" parameterType="Map" resultType="kr.sh86.myApp.bc.domain.BcUser">
	SELECT *
	FROM BC.BC_USERS
	WHERE PO_NUM &gt;= #{startNum}
	AND PO_NUM &lt;= #{endNum}
	ORDER BY PO_NUM DESC
</select>

<!-- 즐겨찾기 추가 -->
<update id="updateBcFavorByPoNum" parameterType="kr.sh86.myApp.bc.domain.BcUser">
	UPDATE BC.BC_USERS
	SET PO_FAVOR = #{poFavor}
	WHERE PO_NUM = #{poNum}
</update>

<!-- 상세보기 -->
<select id="selectUserByPoNum" parameterType="int" resultType="kr.sh86.myApp.bc.domain.BcUser">
	SELECT *
	FROM BC.BC_USERS
	WHERE PO_NUM = #{poNum}
</select>

<!-- 명함검색 -->
<select id="selectUserByPoName" parameterType="Map" resultType="kr.sh86.myApp.bc.domain.BcUser">
	SELECT *
	FROM BC.BC_USERS
	<trim prefix="WHERE" prefixOverrides="AND">
		<if test="searchValue != 'none'">AND PO_NAME LIKE '%'||#{searchValue}||'%'</if>
		<if test="local != 'none'">AND PO_SIDO LIKE '%'||#{local}||'%'</if>
		<if test="jobCate != '직업'">AND PO_JOBCATE LIKE '%'||#{jobCate}||'%'</if>
		<if test="relationShip != '관계'">AND PO_RELATIONSHIP LIKE '%'||#{relationShip}||'%'</if>
		<if test="searchType == 'favor'">AND PO_FAVOR = 2</if>
	</trim>
	ORDER BY PO_NAME 
</select>

<!-- 명함삭제 -->
<delete id="deleteUserByPoNum" parameterType="int">
	DELETE 
	FROM BC.BC_USERS
	WHERE PO_NUM = #{poNum}
</delete>

<!-- 즐겨찾기 카테고리 조회 -->
<select id="selectFavorCateAll" resultType="kr.sh86.myApp.bc.domain.FavorCate">
	SELECT *
	FROM BC.FAVOR_CATE
</select>

<!-- 명함정보에 즐겨찾기 카테고리 등록 -->
<update id="updateUserFavorCate" parameterType="kr.sh86.myApp.bc.domain.BcUser">
	UPDATE BC.BC_USERS
	SET PO_FAVOR_CATE = #{poFavorCate}
	WHERE PO_NUM = #{poNum}
</update>

<!-- 검색옵션 조회 - 직업카테고리 -->
<select id="selectJobCode" resultType="String">
	SELECT DISTINCT PO_JOBCATE
	FROM BC.BC_USERS
	WHERE PO_JOBCATE IS NOT NULL
	ORDER BY PO_JOBCATE 
</select>

<!-- 검색옵션조회 - 관계 -->
<select id="selectRelation" resultType="String">
	SELECT DISTINCT PO_RELATIONSHIP
	FROM BC.BC_USERS
	WHERE PO_RELATIONSHIP IS NOT NULL
	ORDER BY PO_RELATIONSHIP
</select>

<!-- 즐겨찾기목록 조회 -->
<select id="selectFavorListByCate" parameterType="Map" resultType="kr.sh86.myApp.bc.domain.BcUser">
	SELECT *
	FROM BC.BC_USERS
	WHERE PO_FAVOR = 2
	<if test="cateNum != 0">AND PO_FAVOR_CATE = #{cateNum}</if>
	ORDER BY PO_NAME
</select>

<!-- 전화번호부 업로드전 중복체크 -->
<select id="selectReCheckHp" parameterType="String" resultType="int">
	SELECT COUNT(*)
	FROM BC.BC_USERS
	WHERE PO_TEL2 = #{hp}
</select>

<!-- 모바일기기 전화번호부 입력 -->
<insert id="insertPhoneList" parameterType="kr.sh86.myApp.bc.domain.BcUser">
	<selectKey keyProperty="poNum" resultType="int" order="BEFORE">
		SELECT BCUSER_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO BC.BC_USERS(
		PO_NUM, 
		PO_NAME, 
		PO_TEL2
		<if test="poFax != null and poFax != ''">,PO_FAX</if>
		<if test="poZip1 != null and poZip1 != ''">,PO_ZIP1</if>
		<if test="poSido != null and poSido != ''">,PO_SIDO</if>
		<if test="poGuGun != null and poGuGun != ''">,PO_GUGUN</if>
		<if test="poDong != null and poDong != ''">,PO_DONG</if>
		<if test="poAddr != null and poAddr != ''">,PO_ADDR</if>
		<if test="poBizName != null and poBizName != ''">,PO_BIZ_NAME</if>
		<if test="poBizDepartment != null and poBizDepartment != ''">,PO_BIZ_DEPARTMENT</if>
		<if test="poBizPosition != null and poBizPosition != ''">,PO_BIZ_POSITION</if>
		<if test="poRelationShip != null and poRelationShip != ''">,PO_RELATIONSHIP</if>
		<if test="poJobCate != null and poJobCate != ''">,PO_JOBCATE</if>
		<if test="poFavor != null and poFavor != ''">,PO_FAVOR</if>
		)		
	VALUES(
		#{poNum}, 
		#{poName},
		#{poTel2}
		<if test="poFax != null and poFax != ''">,#{poFax}</if>
		<if test="poZip1 != null and poZip1 != ''">,#{poZip1}</if>
		<if test="poSido != null and poSido != ''">,#{poSido}</if>
		<if test="poGuGun != null and poGuGun != ''">,#{poGuGun}</if>
		<if test="poDong != null and poDong != ''">,#{poDong}</if>
		<if test="poAddr != null and poAddr != ''">,#{poAddr}</if>
		<if test="poBizName != null and poBizName != ''">,#{poBizName}</if>
		<if test="poBizDepartment != null and poBizDepartment != ''">,#{poBizDepartment}</if>
		<if test="poBizPosition != null and poBizPosition != ''">,#{poBizPosition}</if>
		<if test="poRelationShip != null and poRelationShip != ''">,#{poRelationShip}</if>
		<if test="poJobCate != null and poJobCate != ''">,#{poJobCate}</if>
		<if test="poFavor != null and poFavor != ''">,#{poFavor}</if>
		)
</insert>

<!--이미지정보 수정  -->
<update id="updateBcImg" parameterType="kr.sh86.myApp.bc.domain.BcUser">
	UPDATE BC.BC_USERS
	SET PO_BC_IMGPATH = #{poBcImgPath},
		PO_BC_IMGNAME = #{poBcImgName}
	WHERE PO_NUM = #{poNum}
</update>

<select id="selectLastestPk" resultType="int">
	SELECT MAX(PO_NUM)
	FROM BC.BC_USERS
</select>

<select id="selectLastestData" parameterType="kr.sh86.myApp.bc.domain.BcUser" resultType="kr.sh86.myApp.bc.domain.BcUser">
	SELECT *
	FROM BC.BC_USERS
	WHERE PO_NUM = #{poNum}
</select>

<!-- 문자발송 -->
<insert id="insertMms" parameterType="kr.sh86.myApp.bc.domain.Mms">
	INSERT INTO XROSHOT.SDK_MMS_SEND(
		msg_id, 
		user_id, 
		schedule_type, 
		subject, 
		now_date, 
		send_date, 
		callback, 
		dest_count, 
		dest_info, 
		mms_msg)
	VALUES(
		XROSHOT.SDK_MMS_SEQ.NEXTVAL,
		'mystat03',
		#{scheduleType},
		#{subject},
		TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
		TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
		#{callback},
		#{destCount},
		#{destInfo},
		#{mmsMsg})
</insert>

<!-- ============================================================================================ -->

<!-- 전화번호부 중복체크 -->
<select id="selectReCheckHpByGroup" parameterType="kr.sh86.myApp.bc.domain.BcGroup" resultType="int">
	SELECT COUNT(*)
	FROM BC.BC_GROUP
	WHERE BC_HP = #{bcHp}
	AND BC_ORDER_HP = #{bcOrderHp}
</select>

<!-- 전화번호부 그룹핑 -->
<insert id="insertHpByGroup" parameterType="kr.sh86.myApp.bc.domain.BcGroup">
	INSERT INTO BC.BC_GROUP(
		BC_NO, BC_NAME, BC_HP, BC_ORDER_HP 
		<if test="bcCate != null and bcCate != ''">,BC_CATE</if>
		)
	VALUES(
		BC_GROUP_SEQ.NEXTVAL, #{bcName}, #{bcHp}, #{bcOrderHp}
		<if test="bcCate != null and bcCate != ''">,#{bcCate}</if>
		)
</insert>

<!-- 그룹 카테고리 조회 -->
<select id="selectGroupCateAll" resultType="kr.sh86.myApp.bc.domain.GroupCate">
	SELECT *
	FROM BC.GROUP_CATE
</select>

<!-- 그룹핑 된 테이터 조회 -->
<select id="selectListByGroup" parameterType="kr.sh86.myApp.bc.domain.BcGroup" resultType="kr.sh86.myApp.bc.domain.BcGroup">
	SELECT *
	FROM BC.BC_GROUP
	WHERE BC_REJECT = 1
		  <if test="bcCate neq 0">AND BC_CATE = #{bcCate}</if>
		  <if test="bcOrderHp neq null and bcOrderHp neq '' ">AND BC_ORDER_HP = #{bcOrderHp}</if>	
</select>

<!-- 수신거부 번호 입력 -->
<insert id="insertBcReject" parameterType="kr.sh86.myApp.bc.domain.BcReject">
	INSERT INTO BC.BC_REJECT(REJ_HP)
	VALUES(#{rejHp})
</insert>

<!-- 수신거부 한 번호가 그룹핑 되어 있는지 목록 조회 -->
<select id="selectBcGroupByHp" parameterType="kr.sh86.myApp.bc.domain.BcGroup" resultType="kr.sh86.myApp.bc.domain.BcGroup">
	SELECT *
	FROM BC.BC_GROUP
	WHERE BC_HP = #{bcHp}
	AND BC_REJECT = 1
</select>

<!-- 그룹핑 된 목록에 수신거부 체크하기 -->
<update id="updateBcGroupRej" parameterType="kr.sh86.myApp.bc.domain.BcGroup">
	UPDATE BC.BC_GROUP
	SET BC_REJECT = #{bcReject}
	WHERE BC_HP = #{bcHp}
</update>


</mapper>